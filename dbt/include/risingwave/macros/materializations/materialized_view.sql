{% materialization materialized_view,
adapter = 'risingwave' % } {% - SET identifier = model['alias'] - % } {% - SET full_refresh_mode = should_full_refresh () - % } {% - SET USER = env_var ("USER") - % } {{ adapter.create_schema (api.Relation.create (DATABASE = DATABASE, schema = USER + "__risingwave_dbt_tmp")) }} {% - SET old_relation = adapter.get_relation (identifier = identifier, schema = SCHEMA, DATABASE = DATABASE) - % } {% - SET target_relation = api.Relation.create (identifier = identifier, schema = SCHEMA, DATABASE = DATABASE, type = 'materialized_view') - % } {% - SET tmp_relation = api.Relation.create (identifier = identifier, schema = USER + "__risingwave_dbt_tmp", DATABASE = DATABASE, type = 'materialized_view') - % } {{ run_hooks (pre_hooks, inside_transaction = FALSE) }} {{ run_hooks (pre_hooks, inside_transaction = TRUE) }} {% IF full_refresh_mode % } {{ adapter.drop_relation (tmp_relation) }} {% CALL statement ('main') - % } {{ risingwave__create_materialized_view_as (tmp_relation, sql | replace(schema, USER + "__risingwave_dbt_tmp")) }} {% - endcall % } {{ create_indexes (tmp_relation) }} {% elif old_relation IS none % } {% CALL statement ('main') - % } {{ risingwave__create_materialized_view_as (target_relation, sql) }} {% - endcall % } {{ create_indexes (target_relation) }} {%
                                                            ELSE
                                                                % }
                                                                -- get config options
                                                                {% SET on_configuration_change = config.get ('on_configuration_change') % } {% SET configuration_changes = get_materialized_view_configuration_changes (old_relation, config) % } {% IF configuration_changes IS none % }
                                                                            -- do nothing
                                                                            {{ materialized_view_execute_no_op (target_relation) }} {% elif on_configuration_change == 'apply' % } {% CALL statement ('main') - % } {{ risingwave__update_indexes_on_materialized_view (target_relation, configuration_changes.indexes) }} {% - endcall % } {% elif on_configuration_change == 'continue' % }
                                                                                        -- do nothing but a warn
                                                                                        {{ exceptions.warn ("Configuration changes were identified and `on_configuration_change` was set to `continue` for `" ~ target_relation ~ "`") }} {{ materialized_view_execute_no_op (target_relation) }} {% elif on_configuration_change == 'fail' % } {{ exceptions.raise_fail_fast_error ("Configuration changes were identified and `on_configuration_change` was set to `fail` for `" ~ target_relation ~ "`") }} {%
                                                                                                ELSE
                                                                                                    % }
                                                                                                    -- this only happens if the user provides a value other than `apply`, 'continue', 'fail'
                                                                                                    {{ exceptions.raise_compiler_error ("Unexpected configuration scenario") }} {% endif % } {% endif % } {% DO persist_docs (target_relation, model) % } {{ run_hooks (post_hooks, inside_transaction = FALSE) }} {{ run_hooks (post_hooks, inside_transaction = TRUE) }} {{ RETURN ({'relations' :[target_relation] }) }} {% endmaterialization % }
